// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mini_Project.Data;

#nullable disable

namespace Mini_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mini_Project.Models.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("CommentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TaskId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Content = "Started with the task",
                            EmployeeId = 1,
                            TaskId = 1,
                            Timestamp = new DateTime(2024, 8, 20, 13, 32, 47, 803, DateTimeKind.Local).AddTicks(4652)
                        },
                        new
                        {
                            CommentId = 2,
                            Content = "In progress",
                            EmployeeId = 1,
                            TaskId = 1,
                            Timestamp = new DateTime(2024, 8, 20, 13, 32, 47, 804, DateTimeKind.Local).AddTicks(7086)
                        },
                        new
                        {
                            CommentId = 3,
                            Content = "Completed",
                            EmployeeId = 3,
                            TaskId = 3,
                            Timestamp = new DateTime(2024, 8, 20, 13, 32, 47, 804, DateTimeKind.Local).AddTicks(7102)
                        },
                        new
                        {
                            CommentId = 4,
                            Content = "Reviewed",
                            EmployeeId = 4,
                            TaskId = 4,
                            Timestamp = new DateTime(2024, 8, 20, 13, 32, 47, 804, DateTimeKind.Local).AddTicks(7104)
                        },
                        new
                        {
                            CommentId = 5,
                            Content = "Started with the task",
                            EmployeeId = 5,
                            TaskId = 5,
                            Timestamp = new DateTime(2024, 8, 20, 13, 32, 47, 804, DateTimeKind.Local).AddTicks(7106)
                        });
                });

            modelBuilder.Entity("Mini_Project.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "JohnDoe1824@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Level = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email = "TitanSlayer@gmail.com",
                            FirstName = "Levy",
                            LastName = "Ackerman",
                            Level = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            Email = "MysticBoy@gmail.com",
                            FirstName = "Eren",
                            LastName = "Yaeager",
                            Level = 1
                        },
                        new
                        {
                            EmployeeId = 4,
                            Email = "Puppylover@gmail.com",
                            FirstName = "John",
                            LastName = "Wick",
                            Level = 1
                        },
                        new
                        {
                            EmployeeId = 5,
                            Email = "Drake4eva@gmail.com",
                            FirstName = "Pe",
                            LastName = "Doe",
                            Level = 0
                        });
                });

            modelBuilder.Entity("Mini_Project.Models.TaskInfo", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            Description = "Make a 3D printed Model of a Giraffe",
                            DueDate = new DateOnly(2024, 8, 16),
                            EmployeeId = 1,
                            Name = "Make a giraffe",
                            Status = 0
                        },
                        new
                        {
                            TaskId = 2,
                            Description = "Make a 3D printed Model of a Dolphin",
                            DueDate = new DateOnly(2024, 7, 9),
                            EmployeeId = 2,
                            Name = "Make a dolphin",
                            Status = 0
                        },
                        new
                        {
                            TaskId = 3,
                            Description = "Make a 3D printed Model of a Lion",
                            DueDate = new DateOnly(2024, 8, 6),
                            EmployeeId = 3,
                            Name = "Make a lion",
                            Status = 0
                        },
                        new
                        {
                            TaskId = 4,
                            Description = "Make a 3D printed Model of a Car",
                            DueDate = new DateOnly(2024, 10, 26),
                            EmployeeId = 4,
                            Name = "Make a car",
                            Status = 0
                        },
                        new
                        {
                            TaskId = 5,
                            Description = "Make a 3D printed Model of a House",
                            DueDate = new DateOnly(2024, 9, 24),
                            EmployeeId = 5,
                            Name = "Make a house",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Mini_Project.Models.Comments", b =>
                {
                    b.HasOne("Mini_Project.Models.Employee", "Employee")
                        .WithMany("Comments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mini_Project.Models.TaskInfo", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Mini_Project.Models.TaskInfo", b =>
                {
                    b.HasOne("Mini_Project.Models.Employee", "AssignedEmployee")
                        .WithMany("Tasks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedEmployee");
                });

            modelBuilder.Entity("Mini_Project.Models.Employee", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Mini_Project.Models.TaskInfo", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
